View(themen_matrix)
mig_kult$speech[4]
mig_kult <- themen_matrix %>% filter(speaker_party == "AfD", migration_i == 1, kultur_i == 1)
mig_kult$speech[4]
mig_kult$speech[3]
mig_kult$speech[2]
mig_kult$speech[1]
# 4 ist best Example
mig_kult$speech[4]
View(cooc_matrix)
mig_just <- themen_matrix %>% filter(speaker_party == "AfD", migration_i == 1, justiz_i == 1)
mig_just$speech[1]
mig_just$speech[2]
themen_matrix <- reden17 %>% select(speaker_party, date, c(18:28))
themen_matrix[3:13] %<>% apply(., c(1,2), function(x) {ifelse(any(x > 0.2), 1, 0)}) %>%
replace_na(0)
afd_matrix <- themen_matrix %>% filter(speaker_party == "AfD") %>% select(c(3:13)) %>%
as.matrix()
#themen_matrix <- afd_matrix
cooc_matrix <- t(themen_matrix)%*%themen_matrix
diag(cooc_matrix) <- 0
cooc_matrix[cooc_matrix < 4] <- 0
test.gr <- graph_from_adjacency_matrix(cooc_matrix, mode="undirected", weighted=T)
test.visn <- toVisNetworkData(test.gr)
test.visn$edges$value <- test.visn$edges$weight
visNetwork(test.visn$nodes, test.visn$edges)%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 123)
cooc_matrix <- t(themen_matrix)%*%themen_matrix
diag(cooc_matrix) <- 0
cooc_matrix[cooc_matrix < 10] <- 0
test.gr <- graph_from_adjacency_matrix(cooc_matrix, mode="undirected", weighted=T)
test.visn <- toVisNetworkData(test.gr)
test.visn$edges$value <- test.visn$edges$weight
visNetwork(test.visn$nodes, test.visn$edges)%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 123)
themen_matrix <- reden17 %>% select(speaker_party, date, c(18:28))
themen_matrix[3:13] %<>% apply(., c(1,2), function(x) {ifelse(any(x > 0.2), 1, 0)}) %>%
replace_na(0)
afd_matrix <- themen_matrix %>% filter(speaker_party == "AfD") %>% select(c(3:13)) %>%
as.matrix()
#themen_matrix <- afd_matrix
cooc_matrix <- t(themen_matrix)%*%themen_matrix
diag(cooc_matrix) <- 0
themen_matrix <- reden17 %>% select(speaker_party, date, c(18:28))
themen_matrix[3:13] %<>% apply(., c(1,2), function(x) {ifelse(any(x > 0.2), 1, 0)}) %>%
replace_na(0)
View(themen_matrix)
themen_matrix <- themen_matrix[,c(3:13)]
themen_matrix <- reden17 %>% select(speaker_party, date, c(18:28))
themen_matrix[3:13] %<>% apply(., c(1,2), function(x) {ifelse(any(x > 0.2), 1, 0)}) %>%
replace_na(0)
themen_matrix <- themen_matrix[,c(3:13)] %>% as.matrix()
#afd_matrix <- themen_matrix %>% filter(speaker_party == "AfD") %>% select(c(3:13)) %>%
#  as.matrix()
#themen_matrix <- afd_matrix
cooc_matrix <- t(themen_matrix)%*%themen_matrix
diag(cooc_matrix) <- 0
cooc_matrix[cooc_matrix < 10] <- 0
test.gr <- graph_from_adjacency_matrix(cooc_matrix, mode="undirected", weighted=T)
test.visn <- toVisNetworkData(test.gr)
test.visn$edges$value <- test.visn$edges$weight
visNetwork(test.visn$nodes, test.visn$edges)%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 123)
cooc_matrix <- t(themen_matrix)%*%themen_matrix
diag(cooc_matrix) <- 0
cooc_matrix[cooc_matrix < 11] <- 0
test.gr <- graph_from_adjacency_matrix(cooc_matrix, mode="undirected", weighted=T)
test.visn <- toVisNetworkData(test.gr)
test.visn$edges$value <- test.visn$edges$weight
visNetwork(test.visn$nodes, test.visn$edges)%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 123)
diag(cooc_matrix) <- 0
cooc_matrix[cooc_matrix < 12] <- 0
test.gr <- graph_from_adjacency_matrix(cooc_matrix, mode="undirected", weighted=T)
test.visn <- toVisNetworkData(test.gr)
test.visn$edges$value <- test.visn$edges$weight
visNetwork(test.visn$nodes, test.visn$edges)%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 123)
cooc_matrix <- t(themen_matrix)%*%themen_matrix
diag(cooc_matrix) <- 0
cooc_matrix[cooc_matrix < 12] <- 0
test.gr <- graph_from_adjacency_matrix(cooc_matrix, mode="undirected", weighted=T)
test.visn <- toVisNetworkData(test.gr)
test.visn$edges$value <- test.visn$edges$weight
visNetwork(test.visn$nodes, test.visn$edges)%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 123)
themen_matrix <- reden17 %>% select(speaker_party, date, c(18:28))
themen_matrix[3:13] %<>% apply(., c(1,2), function(x) {ifelse(any(x > 0.2), 1, 0)}) %>%
replace_na(0)
#themen_matrix <- themen_matrix[,c(3:13)] %>% as.matrix()
afd_matrix <- themen_matrix %>% filter(speaker_party == "AfD") %>% select(c(3:13)) %>%
as.matrix()
themen_matrix <- afd_matrix
cooc_matrix <- t(themen_matrix)%*%themen_matrix
diag(cooc_matrix) <- 0
cooc_matrix[cooc_matrix < 12] <- 0
test.gr <- graph_from_adjacency_matrix(cooc_matrix, mode="undirected", weighted=T)
test.visn <- toVisNetworkData(test.gr)
test.visn$edges$value <- test.visn$edges$weight
visNetwork(test.visn$nodes, test.visn$edges)%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 123)
themen_matrix <- reden17 %>% select(speaker_party, date, c(18:28))
themen_matrix[3:13] %<>% apply(., c(1,2), function(x) {ifelse(any(x > 0.2), 1, 0)}) %>%
replace_na(0)
#themen_matrix <- themen_matrix[,c(3:13)] %>% as.matrix()
afd_matrix <- themen_matrix %>% filter(speaker_party == "AfD") %>% select(c(3:13)) %>%
as.matrix()
themen_matrix <- afd_matrix
cooc_matrix <- t(themen_matrix)%*%themen_matrix
diag(cooc_matrix) <- 0
cooc_matrix[cooc_matrix < 4] <- 0
test.gr <- graph_from_adjacency_matrix(cooc_matrix, mode="undirected", weighted=T)
test.visn <- toVisNetworkData(test.gr)
test.visn$edges$value <- test.visn$edges$weight
visNetwork(test.visn$nodes, test.visn$edges)%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 123)
# 4 ist best Example
mig_kult$speech[4]
View(my_dict_ref)
my_dict_kultur <- dictionary(list( c("kultur*",
"sport*",
"medien*",
"künstler*",
"religion*",
"kirchen*",
"rundfunk*")))
migration
write.csv(migration, file = "migration_dict.csv")
write.csv(migration, file = "migration.csv", row.names = F)
mig_just$speech[2]
mig_just$speech[3]
mig_just$speech[4]
mig_just$speech[5]
mig_just$speech[6]
mig_just$speech[7]
mig_just$speech[2]
install.packages("RSQLite")
library("RSQLite", lib.loc="~/R/win-library/3.5")
library(networkD3)
library(igraph)
library(intergraph)
library(LSS)
library(tidyverse)
library(magrittr)
library(visNetwork)
library(sna)
library(network)
load("Ergebnisdaten/korpus09_13.RData")
reden09 <- all_reden
load("Ergebnisdaten/korpus13_17.RData")
reden13 <- all_reden
load("Ergebnisdaten/korpus_okt17_okt18.RData")
reden17 <- all_corpus
word_list <- c("beifall", "afd", "spd", "grünen", "90", "cdu", "bündnis", "csu", "dr", "herr", "damen",
"beim", "dass", "abgeordneten", "müssen", "fdp", "sowie", "linke", "herren", "ja", "linken",
"mehr", "sagen", "kollegen", "dank", "gibt", "kolleginnen", "schon", "liebe", "mal", "immer",
"geht", "abg", "ganz", "dafür", "kollege", "frau", "präsident", "vizepräsident","wolfgang",
"unsere", "gerade", "deshalb", "gesagt", "letzten", "tun", "genau", "gar", "wurde",
"wer", "möchte", "darauf", "wäre", "stellen", "lachen", "ulli", "kai", "dr", "zuruf", "zurufe", "000","18", "drucksache",
"dass","mehr","schon","seit","sagt","immer","wurde","beim","heute","gibt","erst","geht")
my_dict_ref <- dictionary(list(migration = c("migrat*",
"migrant*",
"immigration*",
"flüchtling*",
"einwander*",
"asyl*",
"ausländer*",
"flucht*")))
my_dict_umwelt <- dictionary(list(migration = c("umwelt*",
"energie*",
"klima*",
"nachhaltig*",
"kohle*",
"emission*",
"abgase*")))
my_dict_arbeit_und_soziales <- dictionary(list(migration = c("arbeit*",
"hartz*",
"lohn*",
"tarif*",
"wirtschaft*",
"industrie*",
"gerneration*")))
my_dict_sicherheit <- dictionary(list(migration = c("terror*",
"sicherheit*",
"grenz*",
"polizei*",
"überwachung*")))
my_dict_bildung <- dictionary(list(migration = c("schul*",
"bildung*",
"jugend*",
"kindergarten*",
"kita*",
"lehr*",
"ausbildung*",
"unterricht*",
"universtität*",
"hochschul*",
"grundschule*",
"gymnasium*",
"schüler*",
"student")))
my_dict_außenpolitik <- dictionary(list(migration = c("international*",
"grenzüberschreitend*",
"supranational*",
"außenpolitik*",
"dipolmat*",
"uno")))
my_dict_gesundheit <- dictionary(list(migration = c("medizin*",
"gesundheit*",
"krank*",
"pflege*",
"arzt")))
my_dict_finanzen <- dictionary(list(migration = c("haushalt*",
"finanzen*",
"steuern*")))
my_dict_bau <- dictionary(list(migration = c("bau*",
"wohn*",
"miet*",
"stadtentwicklung*")))
my_dict_justiz <- dictionary(list(migration = c("justiz*",
"verfassung*",
"grundrecht*",
"grundgesetz*",
"haft*",
"gericht*")))
my_dict_kultur <- dictionary(list(migration = c("kultur*",
"sport*",
"medien*",
"künstler*",
"religion*",
"kirchen*",
"rundfunk*")))
all_reden <- NULL
reden13$speech_id %<>% as.character()
reden09$speech_id %<>% as.character()
all_corpus <- bind_rows(reden09, reden13, reden17)
reden_corpus<- all_corpus%>% select(speaker, speaker_party, date, speech, speech_id)%>% distinct()
corpus <- corpus(reden_corpus, text_field = "speech", docid_field = "speech_id")
toks_sent <- corpus %>%
corpus_reshape('sentences') %>%
tokens(remove_punct = TRUE, remove_numbers = TRUE) %>%
tokens_remove(c(stopwords("de"),word_list))
#mt_sent <- toks_sent %>%
#  dfm(remove = c(stopwords("de"), word_list)) %>%
#  dfm_select('^[0-9a-zA-Z]+$', valuetype = 'regex') %>%
#  dfm_trim(min_termfreq = 10)
migration    <- head(char_keyness(toks_sent, my_dict_ref, remove_pattern = FALSE, sort = TRUE), 500)
umwelt       <- head(char_keyness(toks_sent, my_dict_umwelt, remove_pattern = FALSE, sort = TRUE), 500)
bildung      <- head(char_keyness(toks_sent, my_dict_bildung, remove_pattern = FALSE, sort = TRUE), 500)
arbeit       <- head(char_keyness(toks_sent, my_dict_arbeit_und_soziales, remove_pattern = FALSE, sort = TRUE), 500)
sicherheit   <- head(char_keyness(toks_sent, my_dict_sicherheit, remove_pattern = FALSE, sort = TRUE), 500)
außenpolitik <- head(char_keyness(toks_sent, my_dict_außenpolitik, remove_pattern = FALSE, sort = TRUE), 500)
gesundheit   <- head(char_keyness(toks_sent, my_dict_gesundheit, remove_pattern = FALSE, sort = TRUE), 500)
finanzen     <- head(char_keyness(toks_sent, my_dict_finanzen, remove_pattern = FALSE, sort = TRUE), 500)
bau          <- head(char_keyness(toks_sent, my_dict_bau, remove_pattern = FALSE, sort = TRUE), 500)
justiz       <- head(char_keyness(toks_sent, my_dict_justiz, remove_pattern = FALSE, sort = TRUE), 500)
kultur       <- head(char_keyness(toks_sent, my_dict_kultur, remove_pattern = FALSE, sort = TRUE), 500)
reden17 %<>% select(speaker, speaker_party, date, speech, speech_id) %>% distinct()
#write.csv(migration, file = "migration.csv", row.names = F)
for (i in 1:length(reden17$speech)){
worte             <- reden17$speech[i] %>% tokens(remove_punct = TRUE, remove_numbers = TRUE) %>% tokens_remove(c(stopwords("de"),word_list))%>% tokens_tolower() %>% unlist()
reden17$migration[i]    <- length(which(worte %in% migration))
reden17$umwelt[i]       <- length(which(worte %in% umwelt      ))
reden17$bildung[i]      <- length(which(worte %in% bildung     ))
reden17$arbeit[i]       <- length(which(worte %in% arbeit      ))
reden17$sicherheit[i]   <- length(which(worte %in% sicherheit  ))
reden17$außenpolitik[i] <- length(which(worte %in% außenpolitik))
reden17$gesundheit[i]   <- length(which(worte %in% gesundheit  ))
reden17$finanzen[i]     <- length(which(worte %in% finanzen    ))
reden17$bau[i]          <- length(which(worte %in% bau         ))
reden17$justiz[i]       <- length(which(worte %in% justiz      ))
reden17$kultur[i]       <- length(which(worte %in% kultur      ))
reden17$sum[i]          <- rowSums(reden17[i, c(6:16)])
}
reden17 %<>% mutate(Migration = migration/sum)
reden17 %<>% mutate(Umwelt = umwelt      /sum)
reden17 %<>% mutate(Bildung = bildung     /sum)
reden17 %<>% mutate(Arbeit = arbeit      /sum)
reden17 %<>% mutate(Sicherheit = sicherheit  /sum)
reden17 %<>% mutate(Außenpolitik = außenpolitik/sum)
reden17 %<>% mutate(Gesundheit = gesundheit  /sum)
reden17 %<>% mutate(Finanzen = finanzen    /sum)
reden17 %<>% mutate(Bau = bau         /sum)
reden17 %<>% mutate(Justiz = justiz      /sum)
reden17 %<>% mutate(Kultur = kultur      /sum)
themen_matrix <- reden17 %>% select(speaker_party, date, c(18:28))
themen_matrix[3:13] %<>% apply(., c(1,2), function(x) {ifelse(any(x > 0.2), 1, 0)}) %>%
replace_na(0)
View(themen_matrix)
gesamt_matrix <- themen_matrix[,c(3:13)] %>% as.matrix()
afd_matrix <- themen_matrix %>% filter(speaker_party == "AfD") %>% select(c(3:13)) %>%
as.matrix()
cooc_matrix <- t(themen_matrix)%*%themen_matrix
diag(cooc_matrix) <- 0
cooc_matrix[cooc_matrix < 4] <- 0
test.gr <- graph_from_adjacency_matrix(cooc_matrix, mode="undirected", weighted=T)
test.visn <- toVisNetworkData(test.gr)
test.visn$edges$value <- test.visn$edges$weight
visNetwork(test.visn$nodes, test.visn$edges)%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 123)
plot_network <- function(x){
cooc_matrix <- t(x)%*%x
diag(cooc_matrix) <- 0
cooc_matrix[cooc_matrix < 4] <- 0
test.gr <- graph_from_adjacency_matrix(cooc_matrix, mode="undirected", weighted=T)
test.visn <- toVisNetworkData(test.gr)
test.visn$edges$value <- test.visn$edges$weight
visNetwork(test.visn$nodes, test.visn$edges)%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 123)
}
plot_network(gesamt_matrix)
plot_network <- function(x, n){
cooc_matrix <- t(x)%*%x
diag(cooc_matrix) <- 0
cooc_matrix[cooc_matrix < n] <- 0
test.gr <- graph_from_adjacency_matrix(cooc_matrix, mode="undirected", weighted=T)
test.visn <- toVisNetworkData(test.gr)
test.visn$edges$value <- test.visn$edges$weight
visNetwork(test.visn$nodes, test.visn$edges)%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visLayout(randomSeed = 123)
}
plot_network(gesamt_matrix, 10)
afd_matrix <- themen_matrix %>% filter(speaker_party == "AfD") %>% select(c(3:13)) %>%
as.matrix()
plot_network(afd_matrix, 4)
umwelt
migration
außenpolitik
umwelt
sample(umwelt, 20)
sample(umwelt, 30)
mig_bau  <- themen_matrix %>% filter(speaker_party == "AfD", migration_i == 1, bau_i == 1)
mig_bau  <- themen_matrix %>% filter(speaker_party == "AfD", Migration == 1, Bau == 1)
# 4 ist best Example
mig_bau[1]
# 4 ist best Example
mig_bau$speech[1]
# 4 ist best Example
mig_bau$speech[2]
View(mig_bau)
speech_matrix <- reden17 %>% select(speaker_party, date, speech, c(18:28))
speech_matrix[4:14] %<>% apply(., c(1,2), function(x) {ifelse(any(x > 0.2), 1, 0)}) %>%
replace_na(0)
mig_bau  <- themen_matrix %>% filter(speaker_party == "AfD", Migration == 1, Bau == 1)
# 4 ist best Example
mig_bau$speech[2]
View(mig_bau)
speech_matrix <- reden17 %>% select(speaker_party, date, speech, c(18:28))
speech_matrix[4:14] %<>% apply(., c(1,2), function(x) {ifelse(any(x > 0.2), 1, 0)}) %>%
replace_na(0)
View(speech_matrix)
mig_bau  <- themen_matrix %>% filter(speaker_party == "AfD", Migration == 1, Bau == 1)
mig_bau  <- speech_matrix %>% filter(speaker_party == "AfD", Migration == 1, Bau == 1)
View(mig_bau)
View(themen_matrix)
as.Date(01-10-2017)
vor_matrix <- themen_matrix %>% filter(date < "2017-01-10") %>% select(c(3:13)) %>%
as.matrix()
as.Date("2017-01-10"))
as.Date("2017-01-10")
as.Date("2017-01-14")
as.Date("2017-14-01")
as.Date("2017-10-01")
View(themen_matrix)
vor_matrix <- themen_matrix %>% filter(date < as.Date("2017-10-01")) %>% select(c(3:13)) %>%
as.matrix()
class(themen_matrix$date)
vor_matrix <- themen_matrix %>% filter(date < as.Date("2017-10-01")) %>% select(c(3:13)) %>%
as.matrix()
vor_matrix <- themen_matrix %>% filter(themen_matrix$date < as.Date("2017-10-01")) %>% select(c(3:13)) %>%
as.matrix()
View(vor_matrix)
themen_matrix <- reden17 %>% select(speaker_party, date, c(18:28))
themen_matrix[3:13] %<>% apply(., c(1,2), function(x) {ifelse(any(x > 0.2), 1, 0)}) %>%
replace_na(0)
vor_matrix <- themen_matrix %>% filter(themen_matrix$date < as.Date("2017-10-01")) %>% select(c(3:13)) %>%
as.matrix()
vor_matrix <- themen_matrix %>% filter(date < as.Date("2017-10-01")) %>% select(c(3:13)) %>%
as.matrix()
View(themen_matrix)
vor_matrix <- themen_matrix %>% filter(date < as.Date("2017-10-01")) %>% select(c(3:13)) %>%
as.matrix()
View(themen_matrix)
View(themen_matrix)
gruen_matrix <- themen_matrix %>% filter(speaker_party == "GRÜNE") %>% select(c(3:13)) %>%
as.matrix()
plot_network(gruen_matrix, 5)
plot_network(gruen_matrix, 4)
plot_network(gruen_matrix, 3)
plot_network(gruen_matrix, 2)
plot_network(gruen_matrix, 1)
plot_network(gruen_matrix, 4)
View(themen_matrix)
gruen_matrix <- themen_matrix %>% filter(speaker_party == "DIE LINKE") %>% select(c(3:13)) %>%
as.matrix()
plot_network(gruen_matrix, 4)
gruen_matrix <- themen_matrix %>% filter(speaker_party == "FDP") %>% select(c(3:13)) %>%
as.matrix()
plot_network(gruen_matrix, 4)
library(tidyverse)
library(magrittr)
library(lubridate)
library(xtable)
# Datensätze Laden
load("Ergebnisdaten/korpus09_13.RData")
reden09<- all_reden
load("Ergebnisdaten/korpus13_17.RData")
reden13 <- all_reden
load("Ergebnisdaten/korpus_okt17_okt18.RData")
reden17 <- all_corpus
all_corpus <- NULL
all_reden<- NULL
# Nach Parteien sortieren
party_regex<- c("SPD", "CDU\\/CSU", "AfD", "DIE LINKE", "FDP", "LINKEN", "B.NDNIS.90\\/DIE.GR.NEN", "B.NDNIS.90\\/ DIE.GR.NEN", "Grüne")
reden09$speaker_party %<>% str_extract(paste(party_regex, collapse = "|"))
reden09$party         %<>% str_extract(paste(party_regex, collapse = "|"))
reden13$speaker_party %<>% str_extract(paste(party_regex, collapse = "|"))
reden13$party         %<>% str_extract(paste(party_regex, collapse = "|"))
# Party Vector
party_vector_09 <- reden09$party %>% unique()
party_vector_13 <- reden13$party %>% unique()
party_vector_17 <- reden17$party %>% unique()
party_vector_13<- party_vector_13[!party_vector_13 %in% c("AfD","FDP")]
party_vector <- party_vector_17
Tabelle_Klatschen_all <- Tabelle_Klatschen_ALL %>% group_by(leg, speaker_party) %>% mutate(sum_n = sum(n)) %>% mutate(perc = n/sum_n)
Tabelle_Klatschen_all %>%
ggplot(aes(x = party, y= perc))+
geom_bar(stat = "identity")+
facet_grid(speaker_party~leg)+
geom_label(
data    = Tabelle_Klatschen_all,
mapping = aes(x = Inf, y = Inf, label = sum_n),stat = "identity",
hjust   = 1.3,
vjust   = 1.5
)+
theme_bw()+
theme(axis.title = element_blank())+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
labs(title = "Vergleich des Beifalls über 3 Legislaturperioden, prozentuale Aufteilung")
ggsave(plot = last_plot(), filename = "Manuscript/All_Text/btspeeches_manuscript-master/Grafiken/13_17WerfürWen_prozent.png")
Tabelle_Klatschen09 <- reden09 %>%
filter(party %in% party_vector, speaker_party %in% party_vector, party != speaker_party, type == "Beifall") %>%
count(party, speaker_party) %>%
arrange(desc(n))
Tabelle_Klatschen09$leg <- "Legislaturperiode 09-13"
Tabelle_Klatschen13 <- reden13 %>%
filter(party %in% party_vector, speaker_party %in% party_vector, party != speaker_party, type == "Beifall") %>%
count(party, speaker_party) %>%
arrange(desc(n))
Tabelle_Klatschen13$leg <- "Legislaturperiode 13-17"
Tabelle_Klatschen17 <- reden17 %>%
filter(party %in% party_vector, speaker_party %in% party_vector, party != speaker_party, type == "Beifall") %>%
count(party, speaker_party) %>%
arrange(desc(n))
Tabelle_Klatschen17$leg <- "Legislaturperiode 17-18"
Tabelle_Klatschen_ALL <- bind_rows(Tabelle_Klatschen09, Tabelle_Klatschen13, Tabelle_Klatschen17)
Tabelle_Klatschen_all <- Tabelle_Klatschen_ALL %>% group_by(leg, speaker_party) %>% mutate(sum_n = sum(n)) %>% mutate(perc = n/sum_n)
Tabelle_Klatschen_ALL %>%
ggplot(aes(party, n))+
geom_bar(stat = "identity")+
facet_grid(speaker_party~leg)+
theme_bw()+
theme(axis.title = element_blank())+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
labs(title = "Vergleich des Beifalls über 3 Legislaturperioden")
Tabelle_Klatschen_all <- Tabelle_Klatschen_ALL %>% group_by(leg, speaker_party) %>% mutate(sum_n = sum(n)) %>% mutate(perc = n/sum_n)
Tabelle_Klatschen_all %>%
ggplot(aes(x = party, y= perc))+
geom_bar(stat = "identity")+
facet_grid(speaker_party~leg)+
geom_label(
data    = Tabelle_Klatschen_all,
mapping = aes(x = Inf, y = Inf, label = sum_n),stat = "identity",
hjust   = 1.3,
vjust   = 1.5
)+
theme_bw()+
theme(axis.title = element_blank())+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
labs(title = "Vergleich des Beifalls über 3 Legislaturperioden, prozentuale Aufteilung")
ggsave(plot = last_plot(), filename = "Manuscript/All_Text/btspeeches_manuscript-master/Grafiken/13_17WerfürWen_prozent.png")
library(wordcloud)
install.packages(wordcloud)
install.packages("wordcloud")
library(wordcloud)
wordcloud(umwelt)
library(quanteda)
textplot_wordcloud(umwelt)
umwelt_dfm <- umwelt %>% dfm()
textplot_wordcloud(umwelt)
View(umwelt_dfm)
textplot_wordcloud(umwelt_dfm)
textplot_wordcloud(umwelt_dfm)
textplot_wordcloud(umwelt_dfm, max_words = 3)
umwelt_dfm <- umwelt %>% dfm()
textplot_wordcloud(umwelt_dfm, max_words = 3)
umwelt_dfm <- umwelt %>% corpus() %>% dfm()
textplot_wordcloud(umwelt_dfm, max_words = 3)
textplot_wordcloud(umwelt_dfm, max_words = 3)
umwelt_dfm <- umwelt %>% corpus() %>% dfm()
textplot_wordcloud(umwelt_dfm, max_words = 3)
